---
- name: Create Linux Client Virtual Machine/s
  vmware_guest:
    hostname: "{{ vsphere_vcenter_hostname }}"
    username: "{{ vsphere_vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vsphere_vcenter_validate_certs }}"
    datacenter: "{{ vsphere_vcenter_datacenter }}"
    name: "{{ inventory_guest_hostname }}"
    folder: "{{ vsphere_vm_folder }}"
    state: "{{ common_vm_state }}"
    guest_id: "{{ inventory_vm_guestid }}"
    esxi_hostname: "{{ vsphere_esxi_host }}"
    template: "{{ inventory_template_name }}"
    disk:
      - size_gb: "{{ common_lin_disk_size }}"
        type: "{{ vsphere_vm_type }}"
        datastore: "{{ vsphere_vm_disk_datastore }}"
    hardware:
      memory_mb: "{{ inventory_guest_vram }}"
      num_cpus: "{{ inventory_guest_vcpu }}"
      scsi: "{{ common_vm_hw_scsi }}"
    networks:
      - name: "{{ common_vm_net_name }}"
        ip: "{{ inventory_hostname }}"
        netmask: "{{ common_netmask }}"
        gateway: "{{ common_gateway }}"
    customization:
      domain: "{{ ad_domain }}"
      dns_servers:
        - "{{ groups['dc'][0] }}"
        - "{{ common_dns2 }}"
      dns_suffix:
        - "{{ ad_domain }}"
    wait_for_ip_address: True
  delegate_to: localhost

- name: Add host to Ansible inventory
  ansible.builtin.add_host:
    hostname: '{{ inventory_hostname }}'
    ansible_user: '{{ common_lin_local_admin }}'
    ansible_password: '{{ template_password }}'
    # always trust, don't store keys
    ansible_ssh_extra_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'

- name: Wait for system to become reachable over SSH
  wait_for_connection:
    timeout: 900
  delegate_to: '{{ inventory_hostname }}'

- name: Install GUI (CentOS / RHEL)
  shell: |
    yum groupinstall "GNOME Desktop" -y
    systemctl set-default graphical.target
  when: inventory_template_name.find("centos") != -1
  become: yes
  delegate_to: '{{ inventory_hostname }}'

- name: Update and upgrade apt packages (Ubuntu)
  ansible.builtin.apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400
  when: inventory_template_name.find("ubuntu") != -1
  become: yes
  delegate_to: '{{ inventory_hostname }}'

- name: Install GUI (Ubuntu) - gnome-shell
  ansible.builtin.apt:
    name: gnome-shell
    state: present
  when: inventory_template_name.find("ubuntu") != -1
  become: yes
  delegate_to: '{{ inventory_hostname }}'

- name: Install GUI (Ubuntu) - ubuntu-desktop
  ansible.builtin.apt:
    name: ubuntu-desktop
    state: present
  when: inventory_template_name.find("ubuntu") != -1
  become: yes
  delegate_to: '{{ inventory_hostname }}'

- name: Reboot machine
  ansible.builtin.reboot:
    msg: "Rebooting..."
  become: yes
  delegate_to: '{{ inventory_hostname }}'
